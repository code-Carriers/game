const characterPlanar = {
  ' ': (new Array(7)).fill('            '),
  A: ['     /\\     ',
    '    /  \\    ',
    '   / /\\ \\   ',
    '  / /  \\ \\  ',
    ' /  ˉˉˉˉ  \\ ',
    '/ /ˉˉˉˉˉˉ\\ \\',
    'ˉˉ        ˉˉ'
  ],
  B: ['|ˉˉˉˉˉˉˉˉˉ\\ ',
    '| |ˉˉˉˉˉ\\ | ',
    '|  ˉˉˉˉˉ  / ',
    '| |ˉˉˉˉˉ\\ \\ ',
    '| |     /  |',
    '|  ˉˉˉˉˉ  / ',
    ' ˉˉˉˉˉˉˉˉˉ  '
  ],
  C: ['/ˉˉˉˉˉˉˉˉˉ\\ ',
    '| |ˉˉˉˉˉ\\ | ',
    '| |      ˉ  ',
    '| |         ',
    '| |      /ˉ|',
    '\\  ˉˉˉˉˉˉ / ',
    ' ˉˉˉˉˉˉˉˉˉ  '
  ],
  D: ['|ˉˉˉˉˉˉˉˉ\\  ',
    '| |ˉˉˉˉˉ\\ \\ ',
    '| |      | |',
    '| |      / |',
    '| |     / / ',
    '|  ˉˉˉˉˉ /  ',
    ' ˉˉˉˉˉˉˉˉ   '
  ],
  E: ['|ˉˉˉˉˉˉˉˉˉˉ|',
    '| |ˉˉˉˉˉˉˉˉ ',
    '|  ˉˉˉˉˉˉˉˉ|',
    '| |ˉˉˉˉˉˉˉˉ ',
    '| |         ',
    '|  ˉˉˉˉˉˉˉˉ|',
    ' ˉˉˉˉˉˉˉˉˉˉ '
  ],
  F: ['|ˉˉˉˉˉˉˉˉˉˉ|',
    '| |ˉˉˉˉˉˉˉˉ ',
    '|  ˉˉˉˉˉˉˉˉ|',
    '| |ˉˉˉˉˉˉˉˉ ',
    '| |         ',
    '| |         ',
    'ˉˉˉ         '
  ],
  G: [
    '  /ˉˉˉˉˉˉ\\  ',
    ' / /ˉˉˉˉ\\ | ',
    '| |      ˉˉ ',
    '| |  |ˉˉˉˉˉ|',
    ' \\ \\  ˉ| |ˉ ',
    '  \\ ˉˉˉ /   ',
    '   ˉˉˉˉˉ    '
  ],
  H: ['|ˉ|      |ˉ|',
    '| |      | |',
    '|  ˉˉˉˉˉˉ  |',
    '| |ˉˉˉˉˉˉ| |',
    '| |      | |',
    '| |      | |',
    ' ˉ        ˉ '
  ],
  I: ['|ˉˉˉˉˉˉˉˉˉˉ|',
    ' ˉˉˉ|  |ˉˉˉ ',
    '    |  |    ',
    '    |  |    ',
    '    |  |    ',
    '|ˉˉˉ    ˉˉˉ|',
    ' ˉˉˉˉˉˉˉˉˉˉ '
  ],
  J: ['|ˉˉˉˉˉˉˉˉˉ|',
    'ˉˉˉˉˉ| |ˉˉ ',
    '     | |   ',
    '     | |   ',
    '\\ˉ\\  / |   ',
    ' \\ ˉˉ /    ',
    '  ˉˉˉˉ     '
  ],
  K: ['|ˉ|    /ˉ/ ',
    '| |   / /  ',
    '|  ˉˉˉ |   ',
    '| |ˉˉˉ\\ \\  ',
    '| |    \\ \\ ',
    '| |     \\ \\',
    ' ˉ       ˉ '
  ],
  L: ['|ˉ|         ',
    '| |         ',
    '| |         ',
    '| |         ',
    '| |         ',
    '|  ˉˉˉˉˉˉˉˉ|',
    ' ˉˉˉˉˉˉˉˉˉˉ '
  ],
  M: ['|ˉˉˉˉˉˉˉˉˉˉˉ|',
    '| |ˉˉ| |ˉˉ| |',
    '| |  | |  | |',
    '| |  | |  | |',
    '| |  | |  | |',
    '| |  | |  | |',
    'ˉˉˉ  ˉˉˉ  ˉˉˉ'
  ],
  N: ['|ˉˉˉ\\    |ˉ|',
    '| |\\ \\   | |',
    '| | \\ \\  | |',
    '| |  \\ \\ | |',
    '| |   \\ \\| |',
    '| |    \\ ˉ |',
    ' ˉ      ˉˉˉ '
  ],
  O: [' /ˉˉˉˉˉˉˉˉ\\ ',
    '/ /ˉˉˉˉˉˉ\\ \\',
    '| |      | |',
    '| |      | |',
    '\\ \\      / /',
    ' \\ ˉˉˉˉˉˉ / ',
    '  ˉˉˉˉˉˉˉˉ  '
  ],
  P: ['|ˉˉˉˉˉˉˉˉˉ\\ ',
    '| |ˉˉˉˉˉˉ\\ \\',
    '| |      | |',
    '| ˉˉˉˉˉˉˉ  /',
    '| |ˉˉˉˉˉˉˉˉ ',
    '| |         ',
    'ˉˉˉ         '
  ],
  Q: [' /ˉˉˉˉˉˉˉˉ\\  ',
    '/ /ˉˉˉˉˉˉ\\ \\ ',
    '| |      | | ',
    '| |      | | ',
    '\\ \\      / / ',
    ' \\ ˉˉˉˉˉˉ  \\ ',
    '  ˉˉˉˉˉˉˉ\\__\\'
  ],
  R: ['|ˉˉˉˉˉˉˉˉˉ\\ ',
    '| |ˉˉˉˉˉˉ\\ \\',
    '| |      | |',
    '| ˉˉˉˉˉˉˉ  /',
    '| |ˉˉˉˉ\\ \\ˉ ',
    '| |     \\ \\ ',
    ' ˉ       ˉˉ '
  ],
  S: [' /ˉˉˉˉˉˉˉˉˉ|',
    '/ /ˉˉˉˉˉˉˉˉ ',
    '\\ ˉˉˉˉˉˉˉˉ\\ ',
    ' ˉˉˉˉˉˉˉˉ\\ \\',
    '\\ˉ\\      / /',
    ' \\ ˉˉˉˉˉˉ / ',
    '  ˉˉˉˉˉˉˉˉ  '
  ],
  T: ['|ˉˉˉˉˉˉˉˉˉˉˉ|',
    ' ˉˉˉˉ| |ˉˉˉˉ ',
    '     | |     ',
    '     | |     ',
    '     | |     ',
    '     | |     ',
    '     ˉˉˉ     '
  ],
  U: ['|ˉ|      |ˉ|',
    '| |      | |',
    '| |      | |',
    '| |      | |',
    ' \\ \\    / / ',
    '  \\ ˉˉˉˉ /  ',
    '   ˉˉˉˉˉˉ   '
  ],
  V: ['|ˉ|      |ˉ|',
    '| |      | |',
    ' \\ \\    / / ',
    '  \\ \\  / /  ',
    '   \\ \\/ /   ',
    '    \\  /    ',
    '     ˉˉ     '
  ],
  W: ['|ˉ|  /ˉˉ\\  |ˉ|',
    '| | / /\\ \\ | |',
    '| | | || | | |',
    '| | | || | | |',
    ' \\ ˉ /  \\ ˉ / ',
    '  \\ /    \\ /  ',
    '   ˉ      ˉ   '
  ],
  X: ['\\ˉ\\      /ˉ/',
    ' \\ \\    / / ',
    '  \\ ˉˉˉˉ /  ',
    '  / /ˉˉ\\ \\  ',
    ' / /    \\ \\ ',
    '/ /      \\ \\',
    'ˉˉ        ˉˉ'
  ],
  Y: ['\\ˉ\\    /ˉ/',
    ' \\ \\  / / ',
    '  \\ \\/ /  ',
    '   \\  /   ',
    '   |  |   ',
    '   |  |   ',
    '    ˉˉ    '
  ],
  Z: ['|ˉˉˉˉˉˉˉˉˉˉ|',
    ' ˉˉˉˉˉˉˉ/ / ',
    '  /ˉˉˉˉˉ /  ',
    ' / /ˉˉˉˉ    ',
    '/ /         ',
    '|  ˉˉˉˉˉˉˉˉ|',
    ' ˉˉˉˉˉˉˉˉˉˉ'
  ],
  1: ['   /ˉˉˉ|    ',
    '  / /| |    ',
    '  ˉˉ | |    ',
    '     | |    ',
    '     | |    ',
    '|ˉˉˉˉ   ˉˉˉ|',
    ' ˉˉˉˉˉˉˉˉˉˉ '
  ],

  2: [' /ˉˉˉˉˉˉˉˉ\\ ',
    '/ /ˉˉˉˉˉˉ\\ \\',
    'ˉˉ       / /',
    '|ˉˉˉˉˉˉˉˉ / ',
    '| |ˉˉˉˉˉˉˉ  ',
    '|  ˉˉˉˉˉˉˉˉ|',
    ' ˉˉˉˉˉˉˉˉˉˉ '
  ],
  3: ['|ˉˉˉˉˉˉˉˉˉˉ\\',
    ' ˉˉˉˉˉˉˉˉ| |',
    '|ˉˉˉˉˉˉˉˉ  /',
    ' ˉˉˉˉˉˉˉˉ| \\',
    '         / |',
    '|ˉˉˉˉˉˉˉˉ  /',
    ' ˉˉˉˉˉˉˉˉˉˉ '
  ],
  4: ['    /ˉˉˉ|   ',
    '   / /| |   ',
    '  / / | |   ',
    ' / /  | |   ',
    '|  ˉˉˉˉ ˉˉˉ|',
    ' ˉˉˉˉˉ| |ˉˉ ',
    '      ˉˉˉ   '
  ],
  5: ['|ˉˉˉˉˉˉˉˉˉˉ|',
    '| |ˉˉˉˉˉˉˉˉ ',
    '\\ ˉˉˉˉˉˉˉˉ\\ ',
    ' ˉˉˉˉˉˉˉˉ\\ \\',
    '\\ˉ\\      / /',
    ' \\ ˉˉˉˉˉˉ / ',
    '  ˉˉˉˉˉˉˉˉ  '
  ],
  6: [' /ˉˉˉˉˉˉˉˉ| ',
    '| /ˉˉˉˉˉˉˉ  ',
    '| ˉˉˉˉˉˉˉˉ\\ ',
    '| |ˉˉˉˉˉˉ\\ \\',
    '\\ \\      / /',
    ' \\ ˉˉˉˉˉˉ / ',
    '  ˉˉˉˉˉˉˉˉ  '
  ],
  7: ['|ˉˉˉˉˉˉˉˉˉˉ|',
    ' ˉˉˉˉˉˉˉ/ / ',
    '       / /  ',
    '      / /   ',
    '     / /    ',
    '    / /     ',
    '    ˉˉ      '
  ],
  8: [' /ˉˉˉˉˉˉˉˉ\\ ',
    '| |ˉˉˉˉˉˉ| |',
    '\\  ˉˉˉˉˉˉ  /',
    '/ /ˉˉˉˉˉˉ\\ \\',
    '| \\      / |',
    '\\  ˉˉˉˉˉˉ  /',
    ' ˉˉˉˉˉˉˉˉˉˉ '
  ],
  9: [' /ˉˉˉˉˉˉˉˉ\\ ',
    '| |ˉˉˉˉˉˉ| |',
    '| |      | |',
    ' \\ ˉˉˉˉˉˉ  |',
    '\\ˉ\\ˉˉˉˉˉˉ| |',
    ' \\ ˉˉˉˉˉˉ  /',
    '  ˉˉˉˉˉˉˉˉˉ '
  ],
  0: [' /ˉˉˉˉˉˉˉ\\ ',
    '/ /ˉˉˉˉˉ\\ \\',
    '| |     | |',
    '| |     | |',
    '\\ \\     / /',
    ' \\ ˉˉˉˉˉ / ',
    '  ˉˉˉˉˉˉˉ  '
  ]
}

const characterStereo = {
  A: [
    '     /\\ˉ\\     ',
    '    /  \\ \\    ',
    '   / /\\ \\ \\   ',
    '  / / /\\ \\ \\  ',
    ' /  ˉˉˉˉ  \\ \\ ',
    '/ /ˉ/ˉˉˉˉ\\ \\ \\',
    'ˉˉˉˉ      ˉˉˉˉ'
  ],
  B: [
    '|ˉˉˉˉˉˉˉˉˉ\\ˉ\\ ',
    '| |ˉ|ˉˉˉ\\ | | ',
    '|  ˉˉˉˉˉ  / / ',
    '| |ˉ|ˉˉˉ\\ \\ \\ ',
    '| | |   /  | |',
    '|  ˉˉˉˉˉ  / / ',
    'ˉˉˉˉˉˉˉˉˉˉˉˉ  '
  ],
  C: [
    '/ˉˉˉˉˉˉˉˉˉ\\ˉ\\ ',
    '| |ˉ|ˉˉˉ\\ | | ',
    '| | |    ˉ ˉ  ',
    '| | |         ',
    '| | |    /ˉ|ˉ|',
    '\\  ˉˉˉˉˉˉ / / ',
    ' ˉˉˉˉˉˉˉˉˉˉˉ  '
  ],
  D: [
    '|ˉˉˉˉˉˉˉˉ\\ˉ\\  ',
    '| |ˉ|ˉˉˉ\\ \\ \\ ',
    '| | |    | | |',
    '| | |    / | |',
    '| | |   / / / ',
    '|  ˉˉˉˉˉ / /  ',
    'ˉˉˉˉˉˉˉˉˉˉˉ   '
  ],
  E: [
    '|ˉˉˉˉˉˉˉˉˉˉ|ˉ|',
    '| |ˉ|ˉˉˉˉˉˉ ˉ ',
    '|  ˉˉˉˉˉˉˉˉ|ˉ|',
    '| |ˉ|ˉˉˉˉˉˉ ˉ ',
    '| | |         ',
    '|  ˉˉˉˉˉˉˉˉ|ˉ|',
    'ˉˉˉˉˉˉˉˉˉˉˉˉˉˉ'
  ],
  F: [
    '|ˉˉˉˉˉˉˉˉˉˉ|ˉ|',
    '| |ˉ|ˉˉˉˉˉˉ ˉ ',
    '|  ˉˉˉˉˉˉˉˉ|ˉ|',
    '| |ˉ|ˉˉˉˉˉˉ ˉ ',
    '| | |         ',
    '| | |         ',
    'ˉˉˉˉˉ         '
  ],
  G: [
    '  /ˉˉˉˉˉˉ\\ˉ\\  ',
    ' / /ˉ/ˉˉ\\ | | ',
    '| | |    ˉˉˉ  ',
    '| | ||ˉˉˉˉˉ|ˉ|',
    ' \\ \\ \\ˉ| |ˉ|ˉ ',
    '  \\ ˉˉˉ / /   ',
    '   ˉˉˉˉˉˉˉ    '
  ],
  H: [
    '|ˉ|ˉ|    |ˉ|ˉ|',
    '| | |    | | |',
    '|  ˉˉˉˉˉˉ  | |',
    '| |ˉ|ˉˉˉˉ| | |',
    '| | |    | | |',
    '| | |    | | |',
    'ˉˉˉˉˉ    ˉˉˉˉˉ'
  ],
  I: [
    '|ˉˉˉˉˉˉˉˉˉˉ|ˉ|',
    ' ˉˉˉ|  |ˉ|ˉ ˉ ',
    '    |  | |    ',
    '    |  | |    ',
    '    |  | |    ',
    '|ˉˉˉ    ˉˉˉ|ˉ|',
    'ˉˉˉˉˉˉˉˉˉˉˉˉˉˉ'
  ],
  J: [
    '|ˉˉˉˉˉˉˉˉˉ|ˉ|',
    'ˉˉˉˉˉ| |ˉ|ˉˉˉ',
    '     | | |   ',
    '     | | |   ',
    '\\ˉ\\ˉ\\/ | |   ',
    ' \\ ˉˉ / /    ',
    '  ˉˉˉˉˉˉ     '
  ],
  K: [
    '|ˉ|ˉ|  /ˉ/ˉ/ ',
    '| | | / / /  ',
    '|  ˉˉˉ | |   ',
    '| |ˉ|ˉ\\ \\ \\  ',
    '| | |  \\ \\ \\ ',
    '| | |   \\ \\ \\',
    'ˉˉˉˉˉ    ˉˉˉˉ'
  ],
  L: [
    '|ˉ|ˉ|         ',
    '| | |         ',
    '| | |         ',
    '| | |         ',
    '| | |         ',
    '|  ˉˉˉˉˉˉˉˉ|ˉ|',
    'ˉˉˉˉˉˉˉˉˉˉˉˉˉˉ'
  ],
  M: [
    '|ˉˉˉˉˉˉˉˉˉˉˉ|ˉ|',
    '| |ˉ|| |ˉ|| | |',
    '| | || | || | |',
    '| | || | || | |',
    '| | || | || | |',
    '| | || | || | |',
    'ˉˉˉˉ ˉˉˉˉ ˉˉˉˉˉ'
  ],
  N: [
    '|ˉˉˉ\\ˉ\\  |ˉ|ˉ|',
    '| |\\ \\ \\ | | |',
    '| | \\ \\ \\| | |',
    '| | |\\ \\ | | |',
    '| | | \\ \\| | |',
    '| | |  \\ ˉ | |',
    'ˉˉˉˉˉ   ˉˉˉˉˉˉ'
  ],
  O: [
    ' /ˉˉˉˉˉˉˉˉ\\ˉ\\ ',
    '/ /ˉTˉˉˉˉ\\ \\ \\',
    '| | |    | | |',
    '| | |    | | |',
    '\\ \\ \\    / / /',
    ' \\ ˉˉˉˉˉˉ / / ',
    '  ˉˉˉˉˉˉˉˉˉˉ  '
  ],
  P: [
    '|ˉˉˉˉˉˉˉˉˉ\\ˉ\\ ',
    '| |ˉ|ˉˉˉˉ\\ \\ \\',
    '| | |    | | |',
    '| ˉˉˉˉˉˉˉ  / /',
    '| |ˉ|ˉˉˉˉˉˉˉˉ ',
    '| | |         ',
    'ˉˉˉˉˉ         '
  ],
  Q: [
    ' /ˉˉˉˉˉˉˉˉ\\ˉ\\  ',
    '/ /ˉTˉˉˉˉ\\ \\ \\ ',
    '| | |    | | | ',
    '| | |    | | | ',
    '\\ \\ \\    / / / ',
    ' \\ ˉˉˉˉˉˉ  \\ \\ ',
    '  ˉˉˉˉˉˉˉ\\__\\_\\'
  ],
  R: [
    '|ˉˉˉˉˉˉˉˉˉ\\ˉ\\ ',
    '| |ˉTˉˉˉˉ\\ \\ \\',
    '| | |    | | |',
    '| ˉˉˉˉˉˉˉ  / /',
    '| |ˉ|ˉˉ\\ \\ˉ\\ˉ ',
    '| | |   \\ \\ \\ ',
    'ˉˉˉˉˉ    ˉˉˉˉ '
  ],
  S: [
    ' /ˉˉˉˉˉˉˉˉˉ|ˉ|',
    '/ /ˉ/ˉˉˉˉˉˉˉˉˉ',
    '\\ ˉˉˉˉˉˉˉˉ\\ˉ\\ ',
    ' ˉˉˉˉˉˉˉˉ\\ \\ \\',
    '\\ˉ\\ˉ\\    / / /',
    ' \\ ˉˉˉˉˉˉ / / ',
    '  ˉˉˉˉˉˉˉˉˉˉ  '
  ],
  T: [
    '|ˉˉˉˉˉˉˉˉˉˉˉ|ˉ|',
    'ˉˉˉˉˉ| |ˉ|ˉˉˉˉˉ',
    '     | | |     ',
    '     | | |     ',
    '     | | |     ',
    '     | | |     ',
    '     ˉˉˉˉˉ     '
  ],
  U: [
    '|ˉ|ˉ|    |ˉ|ˉ|',
    '| | |    | | |',
    '| | |    | | |',
    '| | |    | | |',
    ' \\ \\ \\  / / / ',
    '  \\ ˉˉˉˉ / /  ',
    '   ˉˉˉˉˉˉˉˉ   '
  ],
  V: [
    '|ˉ|ˉ|    |ˉ|ˉ|',
    '| | |    | | |',
    ' \\ \\ \\  / / / ',
    '  \\ \\ \\/ / /  ',
    '   \\ \\/ / /   ',
    '    \\  / /    ',
    '     ˉˉˉˉ     '
  ],
  W: [
    '|ˉ|| /ˉˉ\\\\ |ˉ||',
    '| ||/ /\\ \\\\| ||',
    '| ||| || ||| ||',
    '| ||| || ||| ||',
    ' \\ ˉ // \\ ˉ // ',
    '  \\ //   \\ //  ',
    '   ˉˉ     ˉˉ   '
  ],
  X: [
    '\\ˉ\\ˉ\\    /ˉ/ˉ/',
    ' \\ \\ \\  / / / ',
    '  \\ ˉˉˉˉ / /  ',
    '  / /ˉ/\\ \\ \\  ',
    ' / / /  \\ \\ \\ ',
    '/ / /    \\ \\ \\',
    'ˉˉˉˉ      ˉˉˉˉ'
  ],
  Y: [
    '\\ˉ\\ˉ\\  /ˉ/ˉ/',
    ' \\ \\ \\/ / / ',
    '  \\ \\/ / /  ',
    '   \\  / /   ',
    '   |  | |   ',
    '   |  | |   ',
    '   ˉˉˉˉˉˉ   '
  ],
  Z: [
    '|ˉˉˉˉˉˉˉˉˉˉ|ˉ|',
    'ˉˉˉˉˉˉˉˉ/ / / ',
    '  /ˉˉˉˉˉ / /  ',
    ' / /ˉ/ˉˉˉˉˉ   ',
    '/ / /         ',
    '|  ˉˉˉˉˉˉˉˉ|ˉ|',
    'ˉˉˉˉˉˉˉˉˉˉˉˉˉˉ'
  ],
  1: ['   /ˉˉˉ|ˉ|    ',
    '  / /| | |    ',
    '  ˉˉˉ| | |    ',
    '     | | |    ',
    '     | | |    ',
    '|ˉˉˉˉˉ ˉˉˉˉ|ˉ|',
    'ˉˉˉˉˉˉˉˉˉˉˉˉˉˉ'
  ],
  2: [' /ˉˉˉˉˉˉˉˉ\\ˉ\\ ',
    '/ /ˉ/ˉˉˉˉ\\ \\ \\',
    'ˉˉˉˉ     / /ˉ/',
    '|ˉˉˉˉˉˉˉˉ / / ',
    '| |ˉ|ˉˉˉˉˉˉˉ  ',
    '|  ˉˉˉˉˉˉˉˉ|ˉ|',
    'ˉˉˉˉˉˉˉˉˉˉˉˉˉˉ'
  ],
  3: ['|ˉˉˉˉˉˉˉˉˉˉ\\ˉ\\',
    'ˉˉˉˉˉˉˉˉˉ| |ˉ|',
    '|ˉˉˉˉˉˉˉˉ  /ˉ/',
    'ˉˉˉˉˉˉˉˉˉ| \\ˉ\\',
    '         / |ˉ|',
    '|ˉˉˉˉˉˉˉˉ  /ˉ/',
    'ˉˉˉˉˉˉˉˉˉˉˉˉˉ '
  ],
  4: ['    /ˉˉˉ|ˉ|   ',
    '   / /| | |   ',
    '  / / | | |   ',
    ' / / /| | |   ',
    '|  ˉˉˉˉ ˉˉˉ|ˉ|',
    'ˉˉˉˉˉˉ| |ˉ|ˉˉˉ',
    '      ˉˉˉˉˉ   '
  ],
  5: ['|ˉˉˉˉˉˉˉˉˉˉ|ˉ|',
    '| |ˉ|ˉˉˉˉˉˉˉˉˉ',
    '\\ ˉˉˉˉˉˉˉˉ\\ˉ\\ ',
    ' ˉˉˉˉˉˉˉˉ\\ \\ \\',
    '\\ˉ\\ˉ\\    / /ˉ/',
    ' \\ ˉˉˉˉˉˉ / / ',
    '  ˉˉˉˉˉˉˉˉˉˉ  '
  ],
  6: [' /ˉˉˉˉˉˉˉˉ|ˉ| ',
    '| /ˉ/ˉˉˉˉˉˉˉˉ ',
    '| ˉˉˉˉˉˉˉˉ\\ˉ\\ ',
    '| |ˉ|ˉˉˉˉ\\ \\ \\',
    '\\ \\ \\    / /ˉ/',
    ' \\ ˉˉˉˉˉˉ / / ',
    '  ˉˉˉˉˉˉˉˉˉˉ  '
  ],
  7: ['|ˉˉˉˉˉˉˉˉˉˉ|ˉ|',
    ' ˉˉˉˉˉˉˉ/ /ˉ/ ',
    '       / / /  ',
    '      / / /   ',
    '     / / /    ',
    '    / / /     ',
    '    ˉˉˉˉ      '
  ],
  8: [' /ˉˉˉˉˉˉˉˉ\\ˉ\\ ',
    '| |ˉTˉˉˉˉ| |ˉ|',
    '\\  ˉˉˉˉˉˉ  /ˉ/',
    '/ /ˉ/ˉˉˉˉ\\ \\ˉ\\',
    '| \\ \\    / |ˉ|',
    '\\  ˉˉˉˉˉˉ  /ˉ/',
    ' ˉˉˉˉˉˉˉˉˉˉˉˉ '
  ],
  9: [' /ˉˉˉˉˉˉˉˉ\\ˉ\\ ',
    '| |ˉTˉˉˉˉ| |ˉ|',
    '| | |    | | |',
    ' \\ ˉˉˉˉˉˉ  | |',
    '\\ˉ\\ˉ\\ˉˉˉˉ| | |',
    ' \\ ˉˉˉˉˉˉ  /ˉ/',
    '  ˉˉˉˉˉˉˉˉˉˉˉ '
  ],
  0: [' /ˉˉˉˉˉˉˉ\\ˉ\\ ',
    '/ /ˉ/ˉˉˉ\\ \\ \\',
    '| | |   | |ˉ|',
    '| | |   | | |',
    '\\ \\ \\   / /ˉ/',
    ' \\ ˉˉˉˉˉ / / ',
    '  ˉˉˉˉˉˉˉˉˉ  '
  ]
}

/**
 * @return {string}
 */
function Alphabet(str, mode = 'planar') {
  if (typeof str !== 'string') {
    throw new TypeError('str must be a string')
  }
  str = str.toUpperCase()
  let character
  if (mode === 'planar') {
    character = characterPlanar
  }
  if (mode === 'stereo') {
    character = characterStereo
  }

  let result = '\n'
  const strArr = str.split('\n')
  for (let k = 0; k < strArr.length; k++) {
    for (let j = 0; j < 7; j++) {
      for (let i = 0, length = strArr[k].length; i < length; i++) {
        const nowCharater = strArr[k][i]
        const line = character[nowCharater]
        if (line) {
          result += line[j]
        } else {
          throw new Error(`错误的字符: ${nowCharater}`)
        }
      }
      result += '\n'
    }
  }
  return result
}
exports['default'] = Alphabet
module.exports = exports['default']
